{"ast":null,"code":"var _jsxFileName = \"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/KakaoMap.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport restaurant from '../assets/img/restaurant.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst KakaoMap = props => {\n  _s();\n  console.log(\"props: \" + props.lat + \" / \" + props.lng + \" / \" + JSON.stringify(props.markers));\n  let [menu, setMenu] = useState(props.markers);\n  useEffect(() => {\n    //  mainMarker();\n    menuMarkers();\n  }, [menu]);\n  /*   const mainMarker = () => {\n         const container = document.getElementById('map');\n         const options = { \n             center: new kakao.maps.LatLng(props.lat, props.lng),\n             level : 5\n         };\n         const map = new kakao.maps.Map(container, options);\n         const markerPosition = options.center;\n         let marker = new kakao.maps.Marker({\n             position: markerPosition\n         });\n         \n         marker.setMap(map);\n     }\n  */\n  const menuMarkers = () => {\n    console.log(\"menumarkers : \" + JSON.stringify(props.markers));\n    // let menuMarkersOptions = {\n    //     imageSrc : restaurant,\n    //     imageSize : new kakao.maps.Size(64, 69),\n    //     imageOption : {offset: new kakao.maps.Point(27, 69)}\n    // }\n    const container = document.getElementById('map');\n    const options = {\n      center: new kakao.maps.LatLng(props.lat, props.lng),\n      level: 5\n    };\n    const map = new kakao.maps.Map(container, options);\n    props.markers.forEach(e => {\n      console.log(\"menumarkers e : \" + JSON.stringify(e));\n      new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(e.y, e.x),\n        title: e.title,\n        image: restaurant\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      center: {\n        // 지도의 중심좌표\n        lat: props.lat,\n        lng: props.lng\n      },\n      style: {\n        // 지도의 크기\n        width: \"100%\",\n        height: \"700px\"\n      },\n      level: 3 // 지도의 확대 레벨\n      ,\n      children: props.makers.map((e, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: (e.y, e.x) // 마커를 표시할 위치\n        ,\n        image: {\n          src: \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\",\n          // 마커이미지의 주소입니다\n          size: {\n            width: 24,\n            height: 35\n          } // 마커이미지의 크기입니다\n        },\n\n        title: e.title // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(KakaoMap, \"UwGfTv2yhogcwYplDJ0+KTglFkE=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["useEffect","useState","restaurant","jsxDEV","_jsxDEV","kakao","window","KakaoMap","props","_s","console","log","lat","lng","JSON","stringify","markers","menu","setMenu","menuMarkers","container","document","getElementById","options","center","maps","LatLng","level","map","Map","forEach","e","Marker","position","y","x","title","image","children","style","width","height","makers","index","MapMarker","src","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/KakaoMap.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport restaurant from '../assets/img/restaurant.png';\n\nconst { kakao } = window;\n\nconst KakaoMap = (props) => {\n    console.log(\"props: \" + props.lat + \" / \" + props.lng + \" / \" + JSON.stringify(props.markers))\n\n    let [menu, setMenu] = useState(props.markers)\n\n    useEffect(() => {\n        //  mainMarker();\n        menuMarkers();\n\n    }, [menu])\n    /*   const mainMarker = () => {\n           const container = document.getElementById('map');\n           const options = { \n               center: new kakao.maps.LatLng(props.lat, props.lng),\n               level : 5\n           };\n           const map = new kakao.maps.Map(container, options);\n           const markerPosition = options.center;\n           let marker = new kakao.maps.Marker({\n               position: markerPosition\n           });\n           \n           marker.setMap(map);\n       }\n   */\n    const menuMarkers = () => {\n        console.log(\"menumarkers : \" + JSON.stringify(props.markers));\n        // let menuMarkersOptions = {\n        //     imageSrc : restaurant,\n        //     imageSize : new kakao.maps.Size(64, 69),\n        //     imageOption : {offset: new kakao.maps.Point(27, 69)}\n        // }\n        const container = document.getElementById('map');\n        const options = {\n            center: new kakao.maps.LatLng(props.lat, props.lng),\n            level: 5\n        };\n        const map = new kakao.maps.Map(container, options);\n\n        props.markers.forEach((e) => {\n            console.log(\"menumarkers e : \" + JSON.stringify(e));\n            new kakao.maps.Marker({\n                map: map,\n                position: new kakao.maps.LatLng(e.y, e.x),\n                title: e.title,\n                image: restaurant\n            })\n        });\n    }\n\n\n    return (\n        <div>\n            {/* <div id=\"map\" style={{width:\"100%\", height:\"700px\"}}></div>  */}\n            <Map // 지도를 표시할 Container\n                center={{\n                    // 지도의 중심좌표\n                    lat: props.lat,\n                    lng: props.lng,\n                }}\n                style={{\n                    // 지도의 크기\n                    width: \"100%\",\n                    height: \"700px\",\n                }}\n                level={3} // 지도의 확대 레벨\n            >\n                {props.makers.map((e, index) => (\n                    <MapMarker\n                        position={(e.y, e.x)} // 마커를 표시할 위치\n                        image={{\n                            src: \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\", // 마커이미지의 주소입니다\n                            size: {\n                                width: 24,\n                                height: 35\n                            }, // 마커이미지의 크기입니다\n                        }}\n                        title={e.title} // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n                    />\n                ))}\n            </Map>\n        </div>\n    )\n}\n\nexport default KakaoMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}