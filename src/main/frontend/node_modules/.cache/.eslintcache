[{"/Users/raina/Desktop/traduler_react/src/main/frontend/src/index.js":"1","/Users/raina/Desktop/traduler_react/src/main/frontend/src/App.js":"2","/Users/raina/Desktop/traduler_react/src/main/frontend/src/reportWebVitals.js":"3","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/Main.js":"4","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/ThemeList.js":"5","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/AddPlace.js":"6","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/ThemeView.js":"7","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/Header.js":"8","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/LoginForm.js":"9","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/RegisterForm.js":"10","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPage.js":"11","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPageMenu.js":"12","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MySchedule.js":"13","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/Gmap.js":"14","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/imageSlide.js":"15","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/ImageSlide.js":"16","/Users/raina/Desktop/traduler_react/src/main/frontend/src/assets/js/main.js":"17","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/ReviewList.js":"18","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/KakaoPlace.js":"19","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/KakaoMap.js":"20"},{"size":585,"mtime":1681395700801,"results":"21","hashOfConfig":"22"},{"size":1816,"mtime":1705931633200,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1681394674757,"results":"24","hashOfConfig":"22"},{"size":2638,"mtime":1705936178379,"results":"25","hashOfConfig":"22"},{"size":3280,"mtime":1696870891647,"results":"26","hashOfConfig":"22"},{"size":5147,"mtime":1706026156473,"results":"27","hashOfConfig":"22"},{"size":4292,"mtime":1706117506084,"results":"28","hashOfConfig":"22"},{"size":4445,"mtime":1706032286338,"results":"29","hashOfConfig":"22"},{"size":3542,"mtime":1706029711580,"results":"30","hashOfConfig":"22"},{"size":4525,"mtime":1686234165709,"results":"31","hashOfConfig":"22"},{"size":5111,"mtime":1693846000044,"results":"32","hashOfConfig":"22"},{"size":912,"mtime":1686143084686,"results":"33","hashOfConfig":"22"},{"size":5066,"mtime":1700685029062,"results":"34","hashOfConfig":"22"},{"size":1954,"mtime":1706112754506,"results":"35","hashOfConfig":"22"},{"size":882,"mtime":1700569184974,"results":"36","hashOfConfig":"22"},{"size":887,"mtime":1706032061001,"results":"37","hashOfConfig":"22"},{"size":3489,"mtime":1705930537837,"results":"38","hashOfConfig":"22"},{"size":3786,"mtime":1706118143888,"results":"39","hashOfConfig":"22"},{"size":2757,"mtime":1706288195473,"results":"40","hashOfConfig":"22"},{"size":2391,"mtime":1706287069338,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"18u8mxm",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"45"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"45"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":5,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/raina/Desktop/traduler_react/src/main/frontend/src/index.js",[],[],[],"/Users/raina/Desktop/traduler_react/src/main/frontend/src/App.js",["115","116","117","118"],[],"import {Routes, Link, Route, useNavigate, Outlet} from \"react-router-dom\";\nimport Main from \"./component/Main\";\nimport ThemeList from \"./component/ThemeList\";\nimport ThemeView from \"./component/ThemeView\";\nimport AddPlace from \"./component/AddPlace\";\nimport LoginForm from \"./component/LoginForm\";\nimport RegisterForm from \"./component/RegisterForm\";\nimport {useEffect} from \"react\";\nimport MyPageMenu from \"./component/MyPageMenu\";\nimport MyPage from \"./component/MyPage\";\nimport MySchedule from \"./component/MySchedule\";\n\n\nfunction App() {\n\n  // login cookie storage\n  const today = new Date()\n  const objString = localStorage.getItem(\"userCookie\");\n  const obj = JSON.parse(objString);\n  console.log(\"App.js) userCookie : \" + localStorage.getItem(\"userCookie\"))\n  //localStorage.removeItem(\"userCookie\")\n  useEffect( () => {\n\n    if(obj != null){\n        if(today.toUTCString() > obj.expire ){\n            localStorage.removeItem(\"userCookie\")\n        }\n    }\n  }, []);\n\n  //\n  useEffect( () => {\n      if (localStorage.watched === undefined){\n        localStorage.setItem('watched', JSON.stringify( []));\n      }\n    }, []);\n\n  return (\n    <div className=\"App\">\n      <Routes>\n\n        <Route path='/' element={ <Main/>}></Route>\n        <Route path='/themeList' element={ <ThemeList />}></Route>\n        <Route path='/themeView' element={<ThemeView />}></Route>\n        <Route path='/addPlace' element={<AddPlace />}></Route>\n        <Route path='/login' element={<LoginForm /> }></Route>\n        <Route path='/register' element={<RegisterForm/> }></Route>\n        <Route path='/myPageMenu' element={<MyPageMenu/> }></Route>\n        <Route path='/myPage' element={<MyPage/> }></Route>\n        <Route path='/mySchedule' element={<MySchedule/> }></Route>\n\n      </Routes>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/raina/Desktop/traduler_react/src/main/frontend/src/reportWebVitals.js",[],[],"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/Main.js",["119","120"],[],"import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {useLocation} from \"react-router-dom\";\nimport './../style/main.css';\nimport './../style/font-awesome.min.css'\nimport './../style/traduler.css';\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\n\n\n\nfunction Main () {\n    let navigate = useNavigate();\n    let [data, setData] = useState([]);\n\n    useEffect( () => {\n        axios.get('http://localhost:8899/main', {\n            headers : {\"Content-Type\" : \"application/json\"}\n        })\n            .then( (res) => {\n                console.log(\"res.data ::\" + JSON.stringify(res.data));\n                setData(res.data);\n            })\n    }, [])\n\n    return(\n      <div>\n          <Header />\n          {/*\n        <div className=\"travel_main_header\" style={{background: 'url(../images/main_header.png)'}}>\n            <h2 className=\"travel_main_title\">여행의 설렘은 계획부터 시작되는 거니까.</h2>\n            <h4 className=\"travel_main_title_sub\">지금 트래줄러에서 설렘을 계획해 보세요.</h4>\n        </div>\n          */}\n        <div id=\"wrapper\">\n            <div id=\"main\">\n                <div className=\"inner\">\n                    <header>\n                        <div className=\"travel_main_intro\">\n                            <span>To kick off your trip planning,<br/> simply pick a theme that fits your style.<br/>\n                            Let's get started!</span>\n                        </div>\n                    </header>\n                    <section className=\"tiles\">\n\n                    {\n                        data.map( (e , i) => {\n                            return(\n                                <ThemeList navigate={navigate} e={e} i={i+1}/>\n                            )\n                        })\n                    }\n                    </section>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nfunction ThemeList(props){\n\n    return (\n        <>\n            <article className={'style' + props.i}>\n                 <span className=\"image\">\n                     <img src={'../images/pic0'+props.i+'.jpg' }alt=\"\"/>\n                 </span>\n                {/*<a href=\"${contextPath }/main/themeList?theme=힐링\">*/}\n                <a href='' onClick={ () => {props.navigate('/themelist', {state : props.e.themeName})} } >\n                    <h2>{props.e.themeName}</h2>\n                    <div className=\"content\">\n                        <p>{props.e.themeIntro}</p>\n                    </div>\n                </a>\n            </article>\n\n        </>\n    )\n}\n\n\nexport default Main;","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/ThemeList.js",["121","122","123","124","125"],[],"import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport './../style/main.css';\nimport './../style/font-awesome.min.css'\nimport './../style/traduler.css';\nimport Header from \"./Header\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\n\n\nfunction ThemeList () {\n    let navigate = useNavigate();\n    let { state } = useLocation();\n    console.log(\"state1 \" + state);\n\n    let[ data, setData ] = useState([]);\n\n    useEffect( () => {\n        axios.get('http://localhost:8899/themeList', {\n                params : {\n                    theme : state\n                }\n            },\n            {\n                headers : {\"Content-Type\" : \"application/json\"}\n            })\n                .then( (res) => {\n                    console.log(\"res.data ::\" + JSON.stringify(res.data));\n                    setData(res.data);\n\n\n                })\n    }, [])\n\n    return(\n\n        <div>\n            <Header/>\n\n            <div id=\"wrapper\">\n                <div id=\"main\">\n                    <div className=\"inner\">\n                        <header>\n                            <h1 style={{fontSize: \"40px\", color: \"skyblue\"}}><i>\n                                <strong style={{color: \"#5aacf1\"}}> ' {state} ' </strong> 테마를 선택하셨군요.</i></h1>\n                            <p>테마를 정했으니 이제 테마 속 다양한 여행지들을 확인해볼까요 ?<br/>\n                                자신의 취향에 맞는 여행지를 선택하고 일정에 추가하여 여행을 떠나보세요 !\n                            </p>\n                        </header>\n                        <a onClick={ () => {navigate(-1);}}>뒤로가기 </a>\n\n\n                            <button onClick={() => { navigate('/addPlace', {state : state})} }>Add\n                                Place(관리자용)\n                            </button>\n\n\n                        <section className=\"tiles\">\n                            {\n                                data.map ( ( e , i) => {\n                                    return (\n\n                                    <article style={{width:'250px', height:'250px'}}>\n\t\t\t\t\t\t\t\t\t\t<span className=\"image\">\n\t\t\t\t\t\t\t\t\t\t\t <img style={{ width:\"250px\",  height:\"250px\"}}  src={`http://localhost:8899/readImages/${e.files[0]}`}  />\n\t\t\t\t\t\t\t\t\t\t</span>\n                                        {/*<a href=\"${contextPath }/main/themeView?placeName=${list.placeName}\">*/}\n                                        <a href=\"\" onClick={ () =>{navigate('/themeView' , {state : data[i] })}} >\n                                            <h3>{e.placeName}</h3>\n                                            <div className=\"content\">\n                                                <p>{e.contentIntro}</p>\n                                            </div>\n                                        </a>\n                                        관심콘텐츠 <img src=\"\" style={{ width:\"20px\",  height:\"20px\"}}/> 0\n                                    </article>\n\n                                    )\n                                })\n                            }\n                        </section>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ThemeList;","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/AddPlace.js",["126"],[],"import './../style/main.css';\nimport './../style/font-awesome.min.css'\nimport './../style/traduler.css';\nimport Header from \"./Header\";\nimport {useState} from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nfunction AddPlace(){\n    const { state } = useLocation(); //테마명 가져오기\n\n    const [files, setFiles] = useState([]);\n    const [currentSlide, setCurrentSlide] = useState(0);\n    const [placeName, setPlaceName] = useState('');\n    const [contentIntro, setContentIntro] = useState('');\n    const [contentMain, setContentMain] = useState('');\n    const [placeAddr, setPlaceAddr] = useState('');\n    const [latitude, setLatitude] = useState(0);\n    const [longitude, setLongitude] = useState(0);\n\n    let navigate = useNavigate();\n    let [resData , setResData] = useState({});\n\n\n    const handleSubmit = (e) => {\n        console.log(\"register clicked\")\n        e.preventDefault();\n\n        axios.post('http://localhost:8899/addPlace', {\n            theme : state,\n            placeName : placeName,\n            contentIntro : contentIntro,\n            contentMain : contentMain,\n            placeAddr : placeAddr,\n            latitude : latitude,\n            longitude : longitude,\n            files : files\n        }, {\n            headers : {\n                \"Content-Type\" : \"multipart/form-data\"\n            }\n        }).then( res => {\n            let copy = {...res.data};\n            console.log(\"copy :: \" + JSON.stringify(copy))\n            setResData([copy]); // 안에 배열로\n            console.log(\"resdata \" +  JSON.stringify(resData)) // 이게 자꾸 안담기네?\n  //          navigate('/themeView', {state : resData })\n             navigate('/themeList' , {state : state}) //테마명 가져감\n\n        })\n            .catch( () =>{\n                alert(\"failed\")\n            })\n    };\n\n    const handleNextSlide = () => {\n        setCurrentSlide((currentSlide + 1) % files.length);\n    };\n\n    const handlePrevSlide = () => {\n        setCurrentSlide((currentSlide - 1 + files.length) % files.length);\n    };\n\n    const handleFileChange = (e) => {\n        const newFiles = [...e.target.files];\n        setFiles(newFiles);\n        setCurrentSlide(0);\n    };\n\n    const filePreviewElements = files.map((file, index) => (\n        <div\n            className={`slide ${index === currentSlide ? 'active' : ''}`}\n            key={file.name}\n        >\n            {index === currentSlide && (\n                <>\n                    <img src={URL.createObjectURL(file)} alt={file.name} />\n                    <p className=\"slide-caption\">{file.name}</p>\n                </>\n            )}\n        </div>\n    ));\n\n    return (\n        <div>\n            <Header/>\n            <div id =\"wrapper\">\n                <div id=\"main\">\n                    <div className=\"inner\">\n                    <h1>새로운 장소 추가(관리자)</h1>\n                        <form onSubmit={handleSubmit}>\n                        <div className=\"pp\">\n                            <div className=\"selectA\"><b>Category</b></div>\n                            <div className=\"selectB\">  {state}\n                            </div>\n                        </div>\n\n                            <p><label><br/>1. 이미지 첨부</label>\n                            <input type=\"file\" \n                                    id=\"file\"\n                                    accept=\"image/jpg,image/png,image/jpeg,image/gif\"  \n                                    onChange={handleFileChange} \n                                    multiple/>\n                                <div className=\"slideshow-container\">\n                                    {filePreviewElements}\n                                    <button className=\"prev-button\" onClick={handlePrevSlide}>\n                                        &#10094;\n                                    </button>\n                                    <button className=\"next-button\" onClick={handleNextSlide}>\n                                        &#10095;\n                                    </button>\n                                </div>\n                            </p>\n\n                            <p>3. 장소 이름 <input type=\"text\"  onChange={(e)=>{setPlaceName(e.target.value)}}/></p>\n                            <p>4. 제목 밑에 나올 한줄 요약<textarea rows=\"5\" cols=\"10\" onChange={(e)=>{setContentIntro(e.target.value)}} /></p>\n                            <p>5. 소개(내용)<textarea rows=\"5\" cols=\"10\" onChange={(e)=>{setContentMain(e.target.value)}}/></p>\n                            <p>6. 주소 : <input type=\"text\" onChange={(e)=>{setPlaceAddr(e.target.value)}}/></p>\n                            <p>7. 위도 : <input type=\"text\" onChange={(e)=>{setLatitude(e.target.value)}} /> 경도 : <input type=\"text\" onChange={(e)=>{setLongitude(e.target.value)}}/></p>\n                            <button type=\"submit\">register</button>\n                        </form>\n                    <br/><a href=\"#\">뒤로가기 </a>\n                </div>\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\nexport default AddPlace;","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/ThemeView.js",["127","128","129","130","131","132"],[],"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/Header.js",["133","134","135","136","137","138","139","140","141","142","143","144","145"],[],"import './../style/main.css';\nimport './../style/font-awesome.min.css'\nimport './../style/traduler.css';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\n\nfunction Header() {\n    \n    let navigate = useNavigate();\n    let [user, setUser] = useState([]);\n\n    let [toggle, setToggle] = useState(false);\n    let [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const ifUser = localStorage.getItem(\"userCookie\");\n        if (ifUser) {\n            setUser(JSON.parse(ifUser));\n        }\n        //mylist\n        const myLists = localStorage.getItem(\"watched\");\n        if(myLists){\n            setItems(JSON.parse(myLists));\n        }\n\n    }, [toggle]);\n\n    const logoutBtn = () => {\n        if (window.confirm(\"로그아웃 하시겠습니까?\")) {\n            localStorage.removeItem(\"userCookie\")\n            return navigate(\"/\")\n        }\n    }\n\n    const toggleMenu = () => {\n\n        document.body.classList.add('is-menu-visible');\n        setToggle(true);\n    }\n\n    const closeToggle = () => {\n        document.body.classList.remove('is-menu-visible');\n        setToggle(false)\n    }\n\n    const removeMyList = (id) => {\n        const newArr = items.filter((item) => item.placeId !== id );\n        localStorage.setItem(\"watched\", JSON.stringify(newArr));\n        setItems(newArr);\n    }\n\n    return (\n        <div>\n            <div className=\"wrapp\">\n                <div className='logo'>\n                    <a onClick={() => { navigate('/') }}>\n                        <img src=\"images/traduler-logo-green.png\" height=\"80px\" />\n                    </a>\n                </div>\n                <div>\n                    <header id=\"header\">\n                        <nav>\n                            <ul>\n                                {/* {\n                                    user == '' || user == null\n                                        ? <li ><a onClick={() => { navigate('/login') }}>LOGIN</a></li>\n                                        : <li >{user.value} 님 방가^^!<a href='' onClick={() => { logoutBtn() }}>LOGOUT</a></li>\n                                }\n                                <li ><a href=\"\" onClick={ () => {navigate('/myPageMenu') }}>MY TRADULE</a></li> \n                                 */}\n                                <li ><a onClick={() => {  toggleMenu() }}>Menu</a></li>\n\n                            </ul>\n                        </nav>\n                    </header>\n                    <nav id=\"menu\">\n                        <div className='inner'>\n                        <h2>Menu</h2>\n                        <br/>\n                        <ul>\n                            <li><a >Home</a></li>\n                            {\n                                user == '' || user == null\n                                ? <li><a onClick={() => { navigate('/login') }}>Login / Register</a></li>\n                                : <li><a onClick={() => { logoutBtn() }} >Logout</a></li>\n                            }\n                            <li><a >My Page</a></li>\n                            <li><a>Review</a></li>\n                            <li><a >QnA</a></li>\n                            {/* <li><h2>로그인을 한 후 나만의 리스트를 만들어보세요!</h2> </li> */}\n                            <li>\n                                <br/><h2>My Tradule List🏖</h2>\n                                {\n                                    items.length > 0 \n                                    ? items.map((item, i) => {\n                                        return(\n                                        <div id=\"replyList\" key={i} onClick={()=>{ removeMyList(item.placeId)}}>\n                                            <span >{item.placeName} &nbsp;💔</span><br/>\n                                            <img src={`http://localhost:8899/readImages/${item.image}`} /><br/>\n                                        </div>\n                                        )\n                                    })\n                                    : <div>None</div>\n                                }    \n                            </li>\n                        </ul>\n                        </div>\n                        <a className='close' onClick={() => { closeToggle() }}> Close  </a>\n                    </nav>\n\n\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\nexport default Header;","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/LoginForm.js",["146","147","148","149","150"],[],"import React, { useState } from 'react';\nimport './../style/LoginForm.css';\nimport Header from \"./Header\"; // Import the CSS file for styling\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n    const navigate = useNavigate();\n\n    const [loginId, setLoginId] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLoginIdChange = (e) => {\n        setLoginId(e.target.value);\n    };\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n\n    //Login Cookie create\n    const expireTime = new Date();\n    expireTime.setMinutes(expireTime.getMinutes()+30) // 30mins\n\n    const obj = {\n        value : loginId,\n        expire : expireTime.toUTCString() // GMT\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(`id: ${loginId}, Password: ${password}`);\n\n        axios.post('http://localhost:8899/user/login', {\n            userId : loginId,\n            userPwd : password\n        }, {\n            headers : {\"Content-Type\" : \"application/json\"}\n        }).then( res => {\n            console.log(res.data);\n            if(res.data == 3){\n                //    localStorage.setItem(\"userCookie\", JSON.stringify(res.data))\n                localStorage.setItem(\"userCookie\", JSON.stringify(obj))\n\n                navigate('/')\n\n            }else if(res.data == 1){\n                alert(\"존재하지 않는 아이디입니다.\")\n            }else if(res.data == 2) {\n                alert(\"비밀번호를 다시 입력해주세요\")\n            }\n        })\n\n    };\n\n/* >> spring security test\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(`id: ${loginId}, Password: ${password}`);\n\n        axios.post('http://localhost:8899/user/login', {\n            username : loginId,\n            password : password\n        }, {\n            //headers : {\"Content-Type\" : \"application/json\"}\n            headers : {\"Content-Type\" : \"application/x-www-form-urlencoded\"} //spring-security\n        }).then( res => {\n            console.log(\"data : \" + res.data);\n\n        }).catch((e)  => console.log(\"e\" + e))\n\n    };\n*/\n    return (\n        <>\n            <Header/>\n        <div className=\"login-form\">\n            <h1>WELCOME! </h1><br/>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"id\">Id</label>\n                    <input\n                        type=\"text\"\n                        id=\"id\"\n                        value={loginId}\n                        onChange={handleLoginIdChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={handlePasswordChange}\n                        required\n                    />\n                </div>\n                <button type=\"submit\" style={{width : '100%'}}>Login</button>\n            </form>\n            <br/>\n            <label> Don't you have an account? &nbsp;&nbsp;&nbsp;\n                <a href='' onClick={ () => {navigate('/register')}} style={{width : '100%'}}>\n                    <h2>&#10132;SIGN UP</h2>\n                </a>\n            </label>\n        </div>\n        </>\n    );\n};\n\nexport default LoginForm;\n","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/RegisterForm.js",["151","152","153"],[],"import React, { useState } from 'react';\nimport './../style/LoginForm.css';\nimport Header from \"./Header\"; // Import the CSS file for styling\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst RegisterForm = () => {\n\n    const navigate = useNavigate();\n\n    const [loginId, setLoginId] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLoginIdChange = (e) => {\n        setLoginId(e.target.value);\n        document.getElementById('idCheckBtn').value = 0;\n    };\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value);\n    };\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const idCheck = () => {\n        console.log(\"idCheck : \" + loginId)\n        axios.post('http://localhost:8899/user/checkId', {\n            userId : loginId\n        }, {\n            headers : {\n                \"Content-Type\" : \"application/json\"\n            }\n        }).then( res => {\n            if(JSON.stringify(res.data) == 'true'  ){\n                alert(\"사용 가능한 아이디입니다.\")\n                document.getElementById('idCheckBtn').value = 1;\n            }else{\n                alert(\"이미 등록된 아이디입니다.\")\n                document.getElementById('idCheckBtn').value = 2;\n            }\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"? \" + document.getElementById('idCheckBtn').value)\n        console.log(`id : ${loginId}, Email: ${email}, Password: ${password}`);\n        console.log(loginId +\"/\" + password +\"/\" + email)\n        if( document.getElementById('idCheckBtn').value != 1) {\n            alert(\"아이디 중복확인을 해주세요\")\n            return false;\n        }else{\n            axios.post('http://localhost:8899/user/register', {\n                userId : loginId,\n                userPwd : password,\n                userEmail : email\n            }, {\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }).then( res => {\n                console.log(res.data);\n                if(res.data.userId != null){\n                    alert(\"회원가입이 완료되었습니다. 로그인을 해주세요\");\n                    navigate('/login');\n                }else{\n                    alert(\"회원가입에 실패하였습니다.\")\n                }\n            })\n        }\n    };\n\n    return (\n        <>\n            <Header/>\n        <div className=\"login-form\">\n            <h1>JOIN US  <br/> </h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <div style={{display:\"flex\"}}>\n                    <div style={{width :\"70%\"}}>\n                        <label htmlFor=\"id\">Id</label>\n                        <input\n                            type=\"text\"\n                            id=\"id\"\n                            value={loginId}\n                            onChange={handleLoginIdChange}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label><button id={'idCheckBtn'} value={0} type={\"button\"} onClick={ idCheck } style={{marginTop:\"35px\"}}> ID check</button></label>\n                    </div>\n                    </div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={handleEmailChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={handlePasswordChange}\n                        required\n                    />\n                </div>\n                <button type=\"submit\" style={{width : '100%'}}>REGISTER</button>\n            </form>\n            <label> Already have an account? &nbsp;&nbsp;&nbsp;\n                <a href='' onClick={ () => {navigate('/login')}} style={{width : '100%'}}>\n                    <h2>&#10132;LOGIN</h2>\n                </a>\n            </label>\n\n        </div>\n        </>\n    );\n};\n\nexport default RegisterForm;\n","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPage.js",["154","155"],[],"import React, { useEffect, useState } from 'react';\nimport Header from \"./Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport './../style/MyCalendar.css';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\nconst MyPage = () => {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        const storedEvents = localStorage.getItem(\"watched\");\n        console.log(\"storedEvents : \" + storedEvents);\n        if (storedEvents) {\n            setEvents(JSON.parse(storedEvents));\n        }\n\n        const draggableEl = document.getElementById(\"external-events\");\n        new Draggable(draggableEl, {\n            itemSelector: \".fc-event\",\n            eventData: function (eventEl) {\n                let id = eventEl.getAttribute(\"data-id\");\n                let name = eventEl.getAttribute(\"title\");\n                return {\n                    id: id,\n                    title: name,\n                    startEditable: true,\n                    create: true\n                };\n            }\n        });\n    }, []);\n\n    const handleEventDrop = (info) => {\n        const { event } = info;\n        const newEvents = [...events];\n        const index = newEvents.findIndex((e) => e.id === event.id);\n        newEvents[index] = {\n            ...newEvents[index],\n            start: event.start,\n            end: event.end\n        };\n        setEvents(newEvents);\n        localStorage.setItem(\"watched\", JSON.stringify(newEvents));\n    };\n\n    const removeEvent = (info) => {\n        console.log(\"remove :: \" +info);\n    }\n\n    return (\n        <>\n            <Header />\n            <div className='calendar-head' style={{display : 'flex'}}>\n                <div style={{marginTop : '100px', marginRight : '50px' , width : '35%'}}>\n                    <h2>My List</h2>\n                    <div id=\"external-events\"\n                         style={\n                              { justifyContent : 'center',\n                                display : 'flex',\n                                textAlign : \"center\",\n                                flexWrap: 'wrap',\n                                position: 'relative'\n                              }\n                          }\n                    >\n                        {\n                            events.length > 0  ?\n                                events.map((event) => (\n                                <div\n                                    className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n                                    title={event.placeName}\n                                    data-id={event.placeId}\n                                    key={event.placeId}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        backgroundColor : 'white',\n                                        borderColor : \"pink\"\n                                    }}\n                                >\n                                    <div className=\"fc-event-main\" style={{color  : 'black'}}>\n                                        <div>\n                                            <strong>{event.placeName}</strong>\n                                        </div>\n                                        <div>\n                                            {/* 이미지 불러오기 */}\n                                            <img  src={`http://localhost:8899/readImages/${event.image}`}\n                                                  style={{width : '150px', height : '150px'}}/>\n                                        </div>\n                                        <br />\n                                    </div>\n                                </div>\n                            ))\n                            : <div> <br/><br/>\n                                    트레줄러에서 원하는 테마를 선택하여 <br/>\n                                    나의리스트에 추가해주세요\n                              </div>\n                        }\n                    </div>\n                </div>\n                <div style={{marginTop : '100px', marginRight : '50px' , width : '65%'}}>\n                    <FullCalendar\n                        plugins={[dayGridPlugin,timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{\n                            left: \"prev,next today\",\n                            center: \"title\",\n                            right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n                        }}\n                        initialView=\"dayGridMonth\"\n                        events={events}\n                        editable={true}\n                        droppable={true}\n                        eventDrop={handleEventDrop}\n                        drop = {removeEvent}\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default MyPage;\n","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPageMenu.js",["156","157","158"],[],"import React, { useState } from 'react';\nimport './../style/LoginForm.css';\nimport Header from \"./Header\"; // Import the CSS file for styling\nimport { useNavigate } from \"react-router-dom\";\nimport './../style/traduler.css'\n\nconst MyPageMenu = () => {\n    const navigate = useNavigate();\n\n\n    return (\n        <>\n            <Header/>\n            <div style={{display : 'flex', textAlign: 'center', marginTop :'13%', marginLeft:'33.33%'}}>\n               <a className=\"mytradulermenu\" onClick={ () => {navigate('/mySchedule')}}>\n                <div >\n                    <h1>Plan<br/> My Trip</h1><br/>\n                </div>\n               </a>\n                <a className=\"mytradulermenu\" onClick={ () => {navigate('/myPage')}}>\n                <div >\n                    <h1>My Page </h1><br/>\n                </div>\n                </a>\n            </div>\n        </>\n    );\n};\n\nexport default MyPageMenu;\n","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MySchedule.js",["159","160"],[],"import React, { useEffect, useState } from 'react';\nimport Header from \"./Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport './../style/MyCalendar.css';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\nconst MySchedule = () => {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        const storedEvents = localStorage.getItem(\"watched\");\n        console.log(\"storedEvents : \" + storedEvents);\n        if (storedEvents) {\n            setEvents(JSON.parse(storedEvents));\n        }\n\n        const draggableEl = document.getElementById(\"external-events\");\n        new Draggable(draggableEl, {\n            itemSelector: \".fc-event\",\n            eventData: function (eventEl) {\n                let id = eventEl.getAttribute(\"data-id\");\n                let name = eventEl.getAttribute(\"title\");\n                return {\n                    id: id,\n                    title: name,\n                    startEditable: true,\n                    create: true\n                };\n            }\n        });\n    }, []);\n\n    const handleEventDrop = (info) => {\n        const { event } = info;\n        const newEvents = [...events];\n        const index = newEvents.findIndex((e) => e.id === event.id);\n        newEvents[index] = {\n            ...newEvents[index],\n            start: event.start,\n            end: event.end\n        };\n        setEvents(newEvents);\n        localStorage.setItem(\"watched\", JSON.stringify(newEvents));\n    };\n\n    const removeEvent = (info) => {\n        console.log(\"remove :: \" +info);\n    }\n\n    return (\n        <>\n            <Header />\n            <div className='calendar-head' style={{display : 'flex'}}>\n                <div style={{marginTop : '100px', marginRight : '50px' , width : '35%'}}>\n                    <h2>My List</h2>\n                    <div id=\"external-events\"\n                         style={\n                              { justifyContent : 'center',\n                                display : 'flex',\n                                textAlign : \"center\",\n                                flexWrap: 'wrap',\n                                position: 'relative'\n                              }\n                          }\n                    >\n                        {\n                            events.length > 0  ?\n                                events.map((event) => (\n                                <div\n                                    className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n                                    title={event.placeName}\n                                    data-id={event.placeId}\n                                    key={event.placeId}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        backgroundColor : 'white',\n                                        borderColor : \"pink\"\n                                    }}\n                                >\n                                    <div className=\"fc-event-main\" style={{color  : 'black'}}>\n                                        <div>\n                                            <strong>{event.placeName}</strong>\n                                        </div>\n                                        <div>\n                                            {/* 이미지 불러오기 */}\n                                            <img  src={`http://localhost:8899/readImages/${event.image}`}\n                                                  style={{width : '150px', height : '150px'}}/>\n                                        </div>\n                                        <br />\n                                    </div>\n                                </div>\n                            ))\n                            : <div> <br/><br/>\n                                    Choose the theme and <br/>\n                                    add to my list!\n                              </div>\n                        }\n                    </div>\n                </div>\n                <div style={{marginTop : '100px', marginRight : '50px' , width : '65%'}}>\n                    <FullCalendar\n                        plugins={[dayGridPlugin,timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{\n                            left: \"prev,next today\",\n                            center: \"title\",\n                            right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n                        }}\n                        initialView=\"dayGridMonth\"\n                        events={events}\n                        editable={true}\n                        droppable={true}\n                        eventDrop={handleEventDrop}\n                        drop = {removeEvent}\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default MySchedule;\n","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/Gmap.js",["161","162","163"],[],"import React, {useMemo} from 'react'\nimport {GoogleMap, MarkerF, useJsApiLoader} from '@react-google-maps/api';\n\nconst containerStyle = {\n    // width: '500px',\n    height: '500px',\n    marginLeft: '10%',\n    marginRight: '10%'\n};\n\nconst center = {\n    lat: -3.745,\n    lng: -38.523\n};\n\nfunction Gmap(props) {\n    console.log(\"props : \" + props.lng +\"/\" + props.lat)\n\n    const apiKey = process.env.REACT_APP_GOOGLE_KEY;\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: apiKey\n    })\n\n    const [map, setMap] = React.useState(null)\n    /*\n        const onLoad = React.useCallback(function callback(map) {\n            // This is just an example of getting and using the map instance!!! don't just blindly copy!\n            const bounds = new window.google.maps.LatLngBounds(center);\n            map.fitBounds(bounds);\n\n            setMap(map)\n        }, [])\n    */\n    const markLocation = useMemo( () => ({lat : Number(props.lat) , lng: Number(props.lng)}),[])\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null)\n    }, [])\n\n    return isLoaded ? (\n        <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={markLocation}\n            zoom={15}\n            //     onLoad={onLoad}\n            onUnmount={onUnmount}\n            // remove basic UI design\n            options={{disableDefaultUI : true}}\n        >\n            <MarkerF\n                // REACT 18버전 이후는 MarkerF 로 사용해야 함\n                position={markLocation}\n                /* 안먹히는 이유~?\n                 icon={{\n                     url: \"marker.jpeg\",\n                     scaledSize : new window.google.maps.Size(32, 32)\n                 }}\n                 */\n            />\n            { /* Child components, such as markers, info windows, etc. */ }\n            <></>\n        </GoogleMap>\n    ) : <></>\n}\n\nexport default React.memo(Gmap)\n","/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/imageSlide.js",["164","165"],[],"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/ImageSlide.js",["166"],[],"import { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./../style/traduler.css\"\n\nconst ImageSlide = (props) => {\n    return(\n            <div id='imgHdiv'>\n                <Carousel  stopOnHover infiniteLoop showArrows={false} showStatus={false} >\n                    {\n                        props.files.map( (file, idx) => (  \n                            <div className='imgDiv' key={idx}>\n                                <img\n                                    style={{width: \"750px\", height: '550px', borderRadius:\"10px\"}}\n                                    src={`http://localhost:8899/readImages/${file}`}  />\n                            </div>\n                            )\n                        )\n                    }\n                </Carousel>\n            </div>  \n    )\n}\n\nexport default ImageSlide;\n","/Users/raina/Desktop/traduler_react/src/main/frontend/src/assets/js/main.js",["167","168","169","170","171","172","173","174","175","176","177"],[],"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/ReviewList.js",["178"],[],"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/KakaoPlace.js",["179","180","181","182","183","184","185"],[],"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/KakaoMap.js",["186","187","188"],[],{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":21},{"ruleId":"189","severity":1,"message":"193","line":1,"column":30,"nodeType":"191","messageId":"192","endLine":1,"endColumn":41},{"ruleId":"189","severity":1,"message":"194","line":1,"column":43,"nodeType":"191","messageId":"192","endLine":1,"endColumn":49},{"ruleId":"195","severity":1,"message":"196","line":29,"column":6,"nodeType":"197","endLine":29,"endColumn":8,"suggestions":"198"},{"ruleId":"189","severity":1,"message":"199","line":3,"column":9,"nodeType":"191","messageId":"192","endLine":3,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":70,"column":17,"nodeType":"202","endLine":70,"endColumn":107},{"ruleId":"195","severity":1,"message":"203","line":33,"column":8,"nodeType":"197","endLine":33,"endColumn":10,"suggestions":"204"},{"ruleId":"200","severity":1,"message":"205","line":50,"column":25,"nodeType":"202","endLine":50,"endColumn":61},{"ruleId":"206","severity":1,"message":"207","line":65,"column":13,"nodeType":"202","endLine":65,"endColumn":119},{"ruleId":"200","severity":1,"message":"201","line":68,"column":41,"nodeType":"202","endLine":68,"endColumn":115},{"ruleId":"206","severity":1,"message":"207","line":74,"column":47,"nodeType":"202","endLine":74,"endColumn":100},{"ruleId":"200","severity":1,"message":"201","line":122,"column":26,"nodeType":"202","endLine":122,"endColumn":38},{"ruleId":"189","severity":1,"message":"208","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":12},{"ruleId":"189","severity":1,"message":"209","line":8,"column":10,"nodeType":"191","messageId":"192","endLine":8,"endColumn":19},{"ruleId":"189","severity":1,"message":"210","line":8,"column":21,"nodeType":"191","messageId":"192","endLine":8,"endColumn":29},{"ruleId":"189","severity":1,"message":"211","line":12,"column":8,"nodeType":"191","messageId":"192","endLine":12,"endColumn":16},{"ruleId":"189","severity":1,"message":"212","line":57,"column":11,"nodeType":"191","messageId":"192","endLine":57,"endColumn":22},{"ruleId":"200","severity":1,"message":"205","line":74,"column":23,"nodeType":"202","endLine":74,"endColumn":60},{"ruleId":"189","severity":1,"message":"199","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":21},{"ruleId":"200","severity":1,"message":"205","line":57,"column":21,"nodeType":"202","endLine":57,"endColumn":58},{"ruleId":"206","severity":1,"message":"207","line":58,"column":25,"nodeType":"202","endLine":58,"endColumn":83},{"ruleId":"200","severity":1,"message":"205","line":72,"column":38,"nodeType":"202","endLine":72,"endColumn":75},{"ruleId":"200","severity":1,"message":"205","line":82,"column":33,"nodeType":"202","endLine":82,"endColumn":37},{"ruleId":"213","severity":1,"message":"214","line":84,"column":38,"nodeType":"215","messageId":"216","endLine":84,"endColumn":40},{"ruleId":"200","severity":1,"message":"205","line":85,"column":39,"nodeType":"202","endLine":85,"endColumn":81},{"ruleId":"200","severity":1,"message":"205","line":86,"column":39,"nodeType":"202","endLine":86,"endColumn":75},{"ruleId":"200","severity":1,"message":"205","line":88,"column":33,"nodeType":"202","endLine":88,"endColumn":37},{"ruleId":"200","severity":1,"message":"205","line":89,"column":33,"nodeType":"202","endLine":89,"endColumn":36},{"ruleId":"200","severity":1,"message":"205","line":90,"column":33,"nodeType":"202","endLine":90,"endColumn":37},{"ruleId":"206","severity":1,"message":"207","line":100,"column":45,"nodeType":"202","endLine":100,"endColumn":107},{"ruleId":"200","severity":1,"message":"205","line":109,"column":25,"nodeType":"202","endLine":109,"endColumn":80},{"ruleId":"189","severity":1,"message":"199","line":4,"column":9,"nodeType":"191","messageId":"192","endLine":4,"endColumn":20},{"ruleId":"213","severity":1,"message":"214","line":41,"column":25,"nodeType":"215","messageId":"216","endLine":41,"endColumn":27},{"ruleId":"213","severity":1,"message":"214","line":47,"column":31,"nodeType":"215","messageId":"216","endLine":47,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":49,"column":31,"nodeType":"215","messageId":"216","endLine":49,"endColumn":33},{"ruleId":"200","severity":1,"message":"201","line":104,"column":17,"nodeType":"202","endLine":104,"endColumn":94},{"ruleId":"213","severity":1,"message":"214","line":36,"column":41,"nodeType":"215","messageId":"216","endLine":36,"endColumn":43},{"ruleId":"213","severity":1,"message":"217","line":51,"column":57,"nodeType":"215","messageId":"216","endLine":51,"endColumn":59},{"ruleId":"200","severity":1,"message":"201","line":119,"column":17,"nodeType":"202","endLine":119,"endColumn":91},{"ruleId":"189","severity":1,"message":"193","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":89,"column":45,"nodeType":"202","endLine":90,"endColumn":96},{"ruleId":"189","severity":1,"message":"210","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"205","line":15,"column":16,"nodeType":"202","endLine":15,"endColumn":89},{"ruleId":"200","severity":1,"message":"205","line":20,"column":17,"nodeType":"202","endLine":20,"endColumn":86},{"ruleId":"189","severity":1,"message":"193","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":89,"column":45,"nodeType":"202","endLine":90,"endColumn":96},{"ruleId":"189","severity":1,"message":"218","line":11,"column":7,"nodeType":"191","messageId":"192","endLine":11,"endColumn":13},{"ruleId":"189","severity":1,"message":"219","line":26,"column":12,"nodeType":"191","messageId":"192","endLine":26,"endColumn":15},{"ruleId":"195","severity":1,"message":"220","line":36,"column":94,"nodeType":"197","endLine":36,"endColumn":96,"suggestions":"221"},{"ruleId":"222","severity":2,"message":"223","line":9,"column":25,"nodeType":"191","messageId":"224","endLine":9,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":13,"column":33,"nodeType":"202","endLine":15,"endColumn":89},{"ruleId":"206","severity":1,"message":"207","line":12,"column":33,"nodeType":"202","endLine":14,"endColumn":89},{"ruleId":"222","severity":2,"message":"225","line":13,"column":3,"nodeType":"191","messageId":"224","endLine":13,"endColumn":14},{"ruleId":"222","severity":2,"message":"226","line":30,"column":7,"nodeType":"191","messageId":"224","endLine":30,"endColumn":14},{"ruleId":"189","severity":1,"message":"227","line":41,"column":6,"nodeType":"191","messageId":"192","endLine":41,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":50,"column":25,"nodeType":"215","messageId":"216","endLine":50,"endColumn":27},{"ruleId":"213","severity":1,"message":"214","line":76,"column":25,"nodeType":"215","messageId":"216","endLine":76,"endColumn":27},{"ruleId":"222","severity":2,"message":"226","line":84,"column":10,"nodeType":"191","messageId":"224","endLine":84,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":84,"column":23,"nodeType":"215","messageId":"216","endLine":84,"endColumn":25},{"ruleId":"222","severity":2,"message":"226","line":85,"column":9,"nodeType":"191","messageId":"224","endLine":85,"endColumn":16},{"ruleId":"213","severity":1,"message":"214","line":151,"column":15,"nodeType":"215","messageId":"216","endLine":151,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":180,"column":24,"nodeType":"215","messageId":"216","endLine":180,"endColumn":26},{"ruleId":"222","severity":2,"message":"228","line":185,"column":4,"nodeType":"191","messageId":"224","endLine":185,"endColumn":10},{"ruleId":"206","severity":1,"message":"207","line":27,"column":16,"nodeType":"202","endLine":27,"endColumn":99},{"ruleId":"189","severity":1,"message":"229","line":9,"column":10,"nodeType":"191","messageId":"192","endLine":9,"endColumn":17},{"ruleId":"189","severity":1,"message":"230","line":9,"column":19,"nodeType":"191","messageId":"192","endLine":9,"endColumn":29},{"ruleId":"195","severity":1,"message":"231","line":22,"column":7,"nodeType":"197","endLine":22,"endColumn":9,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":53,"column":34,"nodeType":"202","messageId":"235","endLine":53,"endColumn":72,"fix":"236"},{"ruleId":"206","severity":1,"message":"207","line":66,"column":17,"nodeType":"202","endLine":66,"endColumn":72},{"ruleId":"206","severity":1,"message":"207","line":67,"column":17,"nodeType":"202","endLine":67,"endColumn":72},{"ruleId":"206","severity":1,"message":"207","line":68,"column":17,"nodeType":"202","endLine":68,"endColumn":72},{"ruleId":"189","severity":1,"message":"237","line":9,"column":16,"nodeType":"191","messageId":"192","endLine":9,"endColumn":23},{"ruleId":"195","severity":1,"message":"238","line":14,"column":7,"nodeType":"197","endLine":14,"endColumn":13,"suggestions":"239"},{"ruleId":"189","severity":1,"message":"240","line":24,"column":13,"nodeType":"191","messageId":"192","endLine":24,"endColumn":19},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'Outlet' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'obj' and 'today'. Either include them or remove the dependency array.","ArrayExpression",["241"],"'useLocation' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["242"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Gmap' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'KakaoMap' is defined but never used.","'placeResult' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'center' is assigned a value but never used.","'map' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'props.lat' and 'props.lng'. Either include them or remove the dependency array.",["243"],"no-undef","'data' is not defined.","undef","'breakpoints' is not defined.","'browser' is not defined.","'$submits' is assigned a value but never used.","'jQuery' is not defined.","'markers' is assigned a value but never used.","'setMarkers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPlace'. Either include it or remove the dependency array.",["244"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"245","text":"246"},"'setMenu' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mainMarker' and 'menuMarkers'. Either include them or remove the dependency array.",["247"],"'marker' is assigned a value but never used.",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},[1538,1538]," rel=\"noreferrer\"",{"desc":"256","fix":"257"},"Update the dependencies array to be: [obj, today]",{"range":"258","text":"259"},"Update the dependencies array to be: [state]",{"range":"260","text":"261"},"Update the dependencies array to be: [props.lat, props.lng]",{"range":"262","text":"263"},"Update the dependencies array to be: [getPlace]",{"range":"264","text":"265"},"Update the dependencies array to be: [mainMarker, menu, menuMarkers]",{"range":"266","text":"267"},[968,970],"[obj, today]",[883,885],"[state]",[1010,1012],"[props.lat, props.lng]",[517,519],"[getPlace]",[390,396],"[mainMarker, menu, menuMarkers]"]